<% cache('teams_cache') do %>

<% params[:sort] ||= "name"             # default sort
   params[:direction] ||= "asc"         # default direction
%>
<% # here we build 2 hashes: one '@team_scores' containing the sum of points from a join with scores table_alias_for
   # the other '@teams' containing team info, the 2 hashes will be cross-referenced in the _team partial
%>

<% @team_scores = current_admin.challenges.first.teams.sum(:points, :group => 'teams.id', :joins => {:users => :scores}  ) %>

<% @teams = current_admin.challenges.first.teams %>
<% @teams.each { |t| t.score = @team_scores[t.id]} %>
<%  %>
<% if params[:sort]=='full'		# handle boolean case
   		@teams = @teams.sort_by{|t| t.full ? "Team Full" : "Vacancy"}
   elsif params[:sort]=='score'  # handle scores with possible nil case (sort_by is not nil safe)
   			@teams = @teams.sort_by{|t| t.score || 0 }
   else
   		@teams = @teams.sort_by{|t| t[params[:sort].to_sym] || ''}
  end 
  if params[:direction]=='desc'
	@teams.reverse!
  end
  
  %>

<table class="SortedTeams">
<tr>
	<th><%= sortable "name" %></th>
	<th><%= sortable "created_at", "Created" %></th>
	<th><%= sortable "updated_at", "Updated" %></th>
	<th><%= sortable "full", "Vacancy" %></th>
	<th><%= sortable "score" %></th>
</tr>
  <% @teams.each do |team| %>    
    <%= render team %>
  <% end %>
<% end %>
</table>

